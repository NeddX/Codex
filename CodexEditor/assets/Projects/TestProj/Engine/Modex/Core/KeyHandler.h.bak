#ifndef CODEX_CORE_KEY_HANDLER_H
#define CODEX_CORE_KEY_HANDLER_H

#include <sdafx.h>

namespace codex {
    // Forward decelerations
    class Window;

    class KeyHandler
    {
        friend class Window;

    private:
        static KeyHandler* m_Instance;

    private:
        std::unordered_map<Key, bool> m_KeysPressed;

    private:
        KeyHandler();
        ~KeyHandler();

    protected:
        struct KeyEvent
        {
            Key key;
            u8  action, repeat;
        };

    protected:
        static void Init() noexcept;
        static void Destroy() noexcept;

    public:
        static inline bool IsKeyDown(const Key key) noexcept { return m_Instance->m_KeysPressed[key]; }

    protected:
        static void OnKeyPress_Event(const KeyEvent event);
    };
} // namespace codex

#endif // CODEX_CORE_KEY_HANDLER_H
