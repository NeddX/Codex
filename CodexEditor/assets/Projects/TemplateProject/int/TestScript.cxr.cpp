// Auto-generated by Codex Reflector for /Users/johnmann/dev/Codex/CodexEditor/assets/Projects/TestProj/Assets/Scripts/TestScript.h

#include "../Assets/Scripts/TestScript.h"

#include <string>
#include <string_view>
#include <Codex.h>

void MienScripten::Serialize()
{
 m_SerializedData["MienScripten"]["Id"] = 0;
 m_SerializedData["MienScripten"]["Fields"]["m_Move"]["Type"] = codex::reflect::RFTypeOf(m_Move);
 m_SerializedData["MienScripten"]["Fields"]["m_Move"]["Value"] = m_Move;
 m_SerializedData["MienScripten"]["Fields"]["m_Multiplier"]["Type"] = codex::reflect::RFTypeOf(m_Multiplier);
 m_SerializedData["MienScripten"]["Fields"]["m_Multiplier"]["Value"] = m_Multiplier;
 m_SerializedData["MienScripten"]["Fields"]["m_Axies"]["Type"] = codex::reflect::RFTypeOf(m_Axies);
 m_SerializedData["MienScripten"]["Fields"]["m_Axies"]["Value"] = m_Axies;
}

codex::object MienScripten::GetField(const std::string_view name)
{
 if (name == "m_Move")
  return &m_Move;
 else if (name == "m_Multiplier")
  return &m_Multiplier;
 else if (name == "m_Axies")
  return &m_Axies;
 return codex::nullobj;
}

